class Element {
    constructor(elementType) {
        this.elementType = elementType;
        this.attributes = {};
        this.children = [];
    }

    addAttributes(attributes) {
        for(const k of Object.keys(attributes)) {
            this.attributes[k] = attributes[k];
        }
        return this;
    }

    addChild(childElement) {
        this.innerText = undefined;
        thischildren.push(childElement);

        return this;
    }

    setInnerText(string) {
        this.children = [];
        this.innerText = string;
    }

    build() {
        let DOMelement = document.createElement(this.elementType);

        for (const k of Object.keys(this.attributes)) {
            DOMelement.setAttribute(k, this.attribute[k]);
        }

        if (this.innerText === undefined) {
            for (const child of this.children) {
                DOMelement.appendChild(child.build());
            }
        }
        else {
            let DOMinnerText = document.createTextNode(this.innerText);
            DOMelement.appendChild(DOMinnerText);
        }
        return DOMelement;
    }
}

export default Element;